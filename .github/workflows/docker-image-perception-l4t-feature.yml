# name: Docker Image CI - Feature Branch

# on:
#   push:
#     branches: [feature/**]

# jobs:
#   build-ros-perception-l4t-arm64:
#     name: "Build ROS perception L4T ARM64 (NVIDIA XAVIER)"
#     runs-on: ubuntu-latest
#     env:
#       BASE_IMAGE: "docker.pkg.github.com/sonia-auv/sonia_messages/sonia_messages:arm64-perception-l4t-latest"
#       ARCH: arm64
#       TARGET_TYPE: perception-l4t
#       TARGET_VERSION: feature
#       IMAGE_NAME: <ENTER_YOUR_MODULE_NAME>
#       GITHUB_REMOTE_URL: docker.pkg.github.com/${{ github.repository }}
#     steps:
#       - uses: actions/checkout@v2
#       - name: Login to Github Package Registry
#         run: |
#           echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
#       - name: Install QEMU to be able to compile on X86 into ARM64
#         run: |
#           sudo apt-get update
#           sudo apt-get install qemu binfmt-support qemu-user-static
#           docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#       - name: Build the docker image (perception based)
#         run: |
#           docker build . --tag build-feature-${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER} --build-arg BASE_IMAGE=${BASE_IMAGE}
#       - name: Create Docker Image Tag
#         run: |
#           docker tag build-feature-${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER} ${GITHUB_REMOTE_URL}/${IMAGE_NAME}:${ARCH}-${TARGET_TYPE}-${TARGET_VERSION}-${GITHUB_REF##*/}
#       - name: Push Image to Github Packages Registry
#         run: |
#           docker push ${GITHUB_REMOTE_URL}/${IMAGE_NAME}

#   notify-success:
#     name: "Notify Slack - Success"
#     runs-on: ubuntu-latest
#     needs:
#       [
#         build-ros-perception-l4t-arm64,
#       ]
#     if: success()
#     steps:
#       - name: Notify Slack Success
#         env:
#           SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#         uses: voxmedia/github-action-slack-notify-build@v1
#         with:
#           channel: github-ci-notifications
#           status: SUCCESS
#           color: good

#   notify-fail:
#     name: "Notify Slack - Failure"
#     runs-on: ubuntu-latest
#     needs:
#       [
#         build-ros-perception-l4t-arm64,
#       ]
#     if: failure()
#     steps:
#       - name: Notify Slack Fail
#         env:
#           SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#         uses: voxmedia/github-action-slack-notify-build@v1
#         with:
#           channel: github-ci-notifications
#           status: FAILED
#           color: danger
